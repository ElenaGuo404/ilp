The PizzaDronz is a project assigned as part of the Informatics Large Practice course for the academic year 2022-2023. University of Edinburgh students have access to an online platform through which they can place orders for pizza from participating restaurants. The data pertaining to these orders is stored on a REST-Server and is retrieved by the system at the start of each day. The system is designed to identify invalid orders and to determine the optimal flight path for delivery drones. This is achieved by calculating the flight path and utilizing it to sort the orders in such a way as to maximize the number of deliveries that can be made by the drone. There is only one drone that is responsible for all deliveries and it has a battery capacity of 2000 units. The objective of this project is to fulfill as many orders as possible.

The project utilizes Java 18 with the Maven dependency management system. After downloading, it may be necessary to monitor the code for any potential issues. The test cases are located in a dedicated folder labeled "test". There are six test classes, with the LngLatTest and OrderTest being purely unit tests. The App test serves as a system test, while the remaining test classes are a combination of unit and integration testing, as they pertain to the same objects being tested.
There are 3 packages under 'main" and a separate java file 'App' in the whole system.

1.	 Service
Under the specified package, there are four Java files serving as data readers. These files retrieve data from a REST-Server, including the daily orders placed by students from the University of Edinburgh, information about participating restaurants, such as their name, location, and menu offerings, as well as the location of central areas and no-fly zones.
2.	 Domain
There are 13 java files within the designated package that contain methods for the route-planning of the delivery drone, taking into account restrictions imposed by designated no-fly zones, as well as filtering out any invalid orders to ensure that all orders placed are eligible for delivery.
3.	Controller
There are three Java files within this package that utilize methods from the domain packages to execute the daily system operations, including the calculation of the daily drone flightpath, identification of daily orders suitable for delivery, and monitoring of the daily drone movement. The system employs a strategy of sorting orders in ascending order based on the length of their flightpath, and continuously tracks the drone's battery level to guarantee sufficient power to complete all orders.
